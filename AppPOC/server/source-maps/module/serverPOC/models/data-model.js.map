{"version":3,"sources":["module/serverPOC/models/data-model.ts"],"names":[],"mappings":"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","file":"module/serverPOC/models/data-model.js","sourcesContent":["/**\n * Created by root on 29/9/16.\n */\nimport dbConnection = require('../../../core/db-connection');\nimport Sequelize = require('sequelize');\nvar fs = require('fs');\nvar parse = require('csv-parse');\n\nvar parser = parse({delimiter: '|'}, function(err, data){\n    console.log(data);\n});\n\n\nvar db = dbConnection();\n\n\nexport interface IDataInstance extends Sequelize.Instance<IDataInstance, App.IData>, App.IData { }\nexport interface IDataModel extends Sequelize.Model<IDataModel, App.IData> { }\n\n\nvar sequalizeModel = db.define<IDataInstance, App.IData>('hospitaldata', <any>{\n    hospitalId: { type: Sequelize.INTEGER, primaryKey: true, autoIncrement: true },\n    EquipmentId: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    SystemId: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    Serial: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    Country: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    FacilityId: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    SourceSystem: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    Modality: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    InstallationDate: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    LifeCycle: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    ContractNumber: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    ContractType: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    ContractStatus: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    ProductId: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    SystemDescription: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    ContractStartDate: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    ContractEndDate: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    UsingDepartment: {\n        type: Sequelize.STRING,\n        allowNull: true\n    },\n    OwningDepartment: {\n        type: Sequelize.STRING,\n        allowNull: true\n    }\n});\n\nsequalizeModel.sync({ force: true }).then((model) => {\n\n    fs.createReadStream(__dirname+'/Equipment.csv').pipe(parser).on('data', function (data) {\n        console.log(data);\n        model.create({\n            EquipmentId: data[0],\n            SystemId:data[1],\n            Serial: data[2],\n            Country: data[3],\n            FacilityId: data[4],\n            SourceSystem: data[5],\n            Modality: data[6],\n            InstallationDate: data[7],\n            LifeCycle: data[8],\n            ContractNumber: data[9],\n            ContractType: data[10],\n            ContractStatus: data[11],\n            ProductId: data[12],\n            SystemDescription: data[13],\n            ContractStartDate: data[14],\n            ContractEndDate: data[15],\n            UsingDepartment: data[16],\n            OwningDepartment:data[17]\n        });\n    })\n\n});\n\nexport var Model = sequalizeModel;\n"],"sourceRoot":"/source/"}