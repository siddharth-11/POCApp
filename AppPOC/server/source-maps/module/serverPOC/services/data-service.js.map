{"version":3,"sources":["module/serverPOC/services/data-service.ts"],"names":[],"mappings":"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","file":"module/serverPOC/services/data-service.js","sourcesContent":["/**\n * Created by root on 29/9/16.\n */\nimport Sequelize = require('sequelize');\nimport DataModel = require('../models/data-model');\n\n\nclass DataService {\n\n    getList(searchValue: string): Promise<DataModel.IDataInstance[]> {\n\n        var findOptions: Sequelize.FindOptions = {\n            order: [\n                'EquipmentId'\n            ]\n        };\n\n        if (searchValue) {\n            findOptions.where = {\n                $or: [\n                    { EquipmentId: { $iLike: `%${searchValue}%` } },\n                    { SystemId: { $iLike: `%${searchValue}%` } },\n                    { Serial: { $iLike: `%${searchValue}%` } },\n                    { Country: { $iLike: `%${searchValue}%` } },\n                    { FacilityId: { $iLike: `%${searchValue}%` } },\n                    { SourceSystem: { $iLike: `%${searchValue}%` } },\n                    { Modality: { $iLike: `%${searchValue}%` } },\n                    { InstallationDate: { $iLike: `%${searchValue}%` } },\n                    { LifeCycle: { $iLike: `%${searchValue}%` } },\n                    { ContractNumber: { $iLike: `%${searchValue}%` } },\n                    { ContractType: { $iLike: `%${searchValue}%` } },\n                    { ContractStatus: { $iLike: `%${searchValue}%` } },\n                    { ProductId: { $iLike: `%${searchValue}%` } },\n                    { SystemDescription: { $iLike: `%${searchValue}%` } },\n                    { ContractStartDate: { $iLike: `%${searchValue}%` } },\n                    { ContractEndDate: { $iLike: `%${searchValue}%` } },\n                    { UsingDepartment: { $iLike: `%${searchValue}%` } },\n                    { OwningDepartment: { $iLike: `%${searchValue}%` } }\n                ]\n            }\n        }\n\n        return DataModel.Model.findAll(findOptions);\n    }\n\n    get(EquipmentId: string): Promise<DataModel.IDataInstance> {\n        return DataModel.Model.findById(EquipmentId);\n    }\n\n    create(request: App.IData): Promise<DataModel.IDataInstance> {\n        return DataModel.Model.create(request);\n    }\n\n    update(request: App.IData): Promise<DataModel.IDataInstance> {\n\n        return <any>(DataModel.Model.findById(request.EquipmentId).then((dataInstance) => {\n\n            dataInstance.EquipmentId = request.EquipmentId;\n            dataInstance.SystemId = request.SystemId;\n            dataInstance.Serial = request.Serial;\n            dataInstance.Country = request.Country;\n            dataInstance.FacilityId = request.FacilityId;\n            dataInstance.SourceSystem = request.SourceSystem;\n            dataInstance.Modality = request.Modality;\n            dataInstance.InstallationDate = request.InstallationDate;\n            dataInstance.LifeCycle = request.LifeCycle;\n            dataInstance.ContractNumber = request.ContractNumber;\n            dataInstance.ContractType = request.ContractType;\n            dataInstance.ContractStatus = request.ContractStatus;\n            dataInstance.ProductId = request.ProductId;\n            dataInstance.SystemDescription = request.SystemDescription;\n            dataInstance.ContractStartDate = request.ContractStartDate;\n            dataInstance.ContractEndDate = request.ContractEndDate;\n            dataInstance.UsingDepartment = request.UsingDepartment;\n            dataInstance.OwningDepartment = request.OwningDepartment;\n\n\n            return dataInstance.save();\n        }));\n    }\n\n    delete(EquipmentId: string) {\nconsole.log(\"inside the service\"+EquipmentId);\n        return DataModel.Model.findById(EquipmentId).then((dataInstance) => {\n            return dataInstance.destroy();\n        });\n    }\n\n}\n\nexport = DataService;"],"sourceRoot":"/source/"}