{"version":3,"sources":["public/app/component/core/data-friends-service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAIA;gBAMI,4BAAoB,IAAU;oBAAV,SAAI,GAAJ,IAAI,CAAM;oBAJ9B,mBAAc,GAAG,IAAI,uBAAY,EAAE,CAAC;oBAEpC,SAAI,GAAW,uBAAuB,CAAC;gBAIvC,CAAC;gBAED,yEAAyE;gBACzE,oCAAO,GAAP,UAAQ,WAAmB;oBAEvB,IAAI,MAAM,GAA8B;wBACpC,MAAM,EAAE,KAAK;qBAChB,CAAC;oBAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,IAAI,2CAAsC,WAAa,EAAE,MAAM,CAAC,CAAC;gBAClG,CAAC;gBAED,gCAAG,GAAH,UAAI,YAAoB;oBAEpB,IAAI,MAAM,GAA8B;wBACpC,MAAM,EAAE,KAAK;qBAChB,CAAC;oBAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,IAAI,2CAAsC,YAAc,EAAE,MAAM,CAAC,CAAC;gBACnG,CAAC;gBAED,2CAAc,GAAd,UAAe,OAAwB;oBAEnC,IAAI,MAAM,CAAC;oBACX,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;wBACvB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;oBAC/B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;oBAChC,CAAC;gBAEL,CAAC;gBAED,mCAAM,GAAN,UAAO,OAAwB;oBAE3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,IAAI,6BAA0B,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3F,CAAC;gBAED,mCAAM,GAAN,UAAO,OAAwB;oBAE3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,IAAI,6BAA0B,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1F,CAAC;gBAED,mCAAM,GAAN,UAAO,YAAoB;oBAEvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,IAAI,8CAAyC,YAAc,CAAC,CAAC;gBACjG,CAAC;gBAtDL;oBAAC,qBAAU,EAAE;;sCAAA;gBAuDb,yBAAC;;YAAD,CAtDA,AAsDC,IAAA;YAtDD,mDAsDC,CAAA","file":"public/app/component/core/data-friends-service.js","sourcesContent":["import {Injectable, EventEmitter} from 'angular2/angular2';\nimport {Http} from 'angular2/http';\n\n@Injectable()\nexport class dataFriendsService {\n\n    formSavedEvent = new EventEmitter();\n\n    base: string = 'http://localhost:5000';\n    \n    constructor(private http: Http) {\n\n    }\n    \n    //TODO: Figure out which type return get. Using any is not good solution.\n    getList(searchValue: string): any{\n\n        var params: ngHttp.RequestOptionsArgs = {\n            method: 'GET'\n        };\n\n        return this.http.get(`${this.base}/api/data-friends/list?searchValue=${searchValue}`, params);\n    }\n\n    one(iddataFriend: number): any {\n\n        var params: ngHttp.RequestOptionsArgs = {\n            method: 'GET'\n        };\n\n        return this.http.get(`${this.base}/api/data-friends/one?iddataFriend=${iddataFriend}`, params);\n    }\n\n    savedataFriend(request: App.IdataFriend): any {\n\n        var action;\n        if (request.iddataFriend) {\n            return this.update(request)\n        } else {\n            return this.create(request);\n        }\n\n    }\n\n    create(request: App.IdataFriend): any {\n        \n        return this.http.post(`${this.base}/api/data-friends/create`, JSON.stringify(request));\n    }\n\n    update(request: App.IdataFriend): any {\n\n        return this.http.put(`${this.base}/api/data-friends/update`, JSON.stringify(request));\n    }\n\n    delete(iddataFriend: number): any {\n\n        return this.http.delete(`${this.base}/api/data-friends/delete?iddataFriend=${iddataFriend}`);\n    }\n}"],"sourceRoot":"/source/"}